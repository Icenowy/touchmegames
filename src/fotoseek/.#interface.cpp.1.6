
/*	Copyright (C) 2005, 2006 by Andy Grebe a.k.a. tecknophreak(tecknophreak@gmail.com)
 *
 *	This file is part of TouchMe Games.
 *
 *	TouchMe Games is free software; you can redistribute it and/or modify
 *	it under the terms of the GNU General Public License as published by
 *	the Free Software Foundation; either version 2 of the License, or
 *	(at your option) any later version.
 *
 *	TouchMe Games is distributed in the hope that it will be useful,
 *	but WITHOUT ANY WARRANTY; without even the implied warranty of
 *	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *	GNU General Public License for more details.
 *
 *	You should have received a copy of the GNU General Public License
 *	along with TouchMe Games; if not, write to the Free Software
 *	Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
 */

#include <fotoseek.h>
#include <sstream>
#include <iomanip>
// #include <gdk/gdkpixbuf.h>

// Fill this area with layout functions

// remove this for the final version
void FotoSeek::test() {
    GtkWidget *leftEventBox, *rightEventBox;
    
    leftEventBox = gtk_event_box_new();
    g_signal_connect(G_OBJECT(leftEventBox), "button-press-event",
                     G_CALLBACK(playAreaClicked), (gpointer)this);
    
    leftImage = gtk_image_new_from_file("/projects/touchmegames/src/fotoseek/images/1a.png");
    gtk_container_add((GtkContainer *)leftEventBox, leftImage);
    
    gtk_fixed_put((GtkFixed *)topFixed, leftEventBox, 0, 0);
    
    rightEventBox = gtk_event_box_new();
    g_signal_connect(G_OBJECT(rightEventBox), "button-press-event",
                     G_CALLBACK(playAreaClicked), (gpointer)this);
    
    rightImage = gtk_image_new_from_file("/projects/touchmegames/src/fotoseek/images/1b.png");
    gtk_container_add((GtkContainer *)rightEventBox, rightImage);
    
    gtk_fixed_put((GtkFixed *)topFixed, rightEventBox, imageWidth + 10, 0);
    
    imageMask = gtk_image_new_from_file("/projects/touchmegames/src/fotoseek/images/1mask.png");
}

void FotoSeek::paintOutside(int x, int y, bool found) {
    int seekx(x), seeky(y);
    // find the top
//     for (seeky = y; seeky > 0 && );
}

// Create the layout and start the round
GtkWidget *FotoSeek::init() {
    // Grab the current scores
    GAME_PTR::loadScores(scores);
    
    currentScore = 0;
    topFixed = gtk_fixed_new();
    std::cout << "Width: " << gameWidth << " Height: " << gameHeight << std::endl;
    gtk_widget_set_size_request(topFixed, gameWidth, gameHeight);
    
    test();
    startRound();
    
    // Change this timeout if needed.
    timer = g_timeout_add(200, timeout, this);
    
    gtk_widget_show_all(topFixed);
    
    return topFixed;
}
